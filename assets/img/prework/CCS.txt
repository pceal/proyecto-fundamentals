CCS

<link href="style.css" rel="stylesheet">
-------------------------------------------------
<p style='color: red;'>I'm learning to code!</p>


<p style='color: red; font-size: 20px;'>I'm learning to code!</p>
-------------------------------------------------------
<head>
  <style>


  </style>
</head>

<head>
  <style>
    p {
      color: red;
      font-size: 20px;
    }
  </style>
</head>
-----------------------------------------------
<link href='https://www.codecademy.com/stylesheets/style.css' rel='stylesheet'>

<link href='./style.css' rel='stylesheet'>
------------------------------------------------
p {
  color: green;
}


The type selector does not include the angle brackets.
Since element types are often referred to by their opening tag name, the type selector is sometimes referred to as the tag name or element selector.
p {
  color: green;
}

h1 {
  color: maroon;
}
------------------------
* { 
  font-family: Verdana;
}


* {
  border: 1px solid red;
}

--------------------------------------
<p class='brand'>Sole Shoe Company</p>



.brand {

}
---------------------------------------
.green {
  color: green;
}

.bold {
  font-weight: bold;
}



<h1 class='green bold'> ... </h1>
-----------------------------------------
<h1 id='large-title'> ... </h1>

#large-title {

}
------------------------------------------
[href]{
   color: magenta;
}


<img src='/images/seasons/cold/winter.jpg'>
<img src='/images/seasons/warm/summer.jpg'>

img[src*='winter'] {
  height: 50px;
}

img[src*='summer'] {
  height: 100px;
}


The first ruleset looks for an img element with an attribute of src that contains the string 'winter', and sets the 
Preview: Docs Loading link description
height
 to 50px.
The second ruleset looks for an img element with an attribute of src that contains the string 'summer', and sets the height to 100px.

------------------------------------------

p:hover {
  background-color: lime;
}

:focus, :visited, :disabled, and :active

When you click on an <input> element, and a blue border is added showing that it is in focus.
When you click on a blue <a> link to visit to another page, but when you return the link’s text is purple.
When you’re filling out a form and the submit button is grayed out and disabled. But when all of the fields have been filled out, the button has color showing that it’s active.

--------------------------------------------------------
<h1 class='headline'>Breaking News</h1>
h1 {
  color: red;
}

.headline {
  color: firebrick;
}
----------------------------------------------------
h1.special {

}

-------------------------
<ul class='main-list'>
  <li> ... </li>
  <li> ... </li>
  <li> ... </li>
</ul>

.main-list li {

}
---------------------------------
p {
  color: blue;
}

.main p {
  color: red;
}
-------------------------
h1 {
  font-family: Georgia;
}

.menu {
  font-family: Georgia;
}


h1, 
.menu {
  font-family: Georgia;
}
---------------------------


h1 {
  font-family: Garamond;
}

The font specified must be installed on the user’s computer or downloaded with the site.
Web safe fonts are a group of fonts supported across most browsers and operating systems.
Unless you are using web safe fonts, the font you choose may not appear the same between all browsers and operating systems.
When the name of a typeface consists of more than one word, it’s a best practice to enclose the typeface’s name in quotes, like so:

h1 {
  font-family: 'Courier New';
}
------------------------
p {
  font-size: 18px;
}
--------------------
p {
  font-weight: bold;
}
-----------------------
h1 {
  text-align: right;
}


Preview: Docs Specifies the distance of an element from the left of the specified position.
left
 — aligns text to the left side of its parent element, which in this case is the browser.
center — centers text inside of its parent element.
Preview: Docs Specifies the distance of an element from the right of the specified position.
right
 — aligns text to the right side of its parent element.
justify— spaces out text in order to align with the right and left side of the parent element

-------------------------------------------
Preview: Docs To set color property values for an element.
color
: this property styles an element’s foreground color
Preview: Docs Defines a color for the background of an element.
background-color
: this property styles an element’s background color

h1 {
  color: red;
  background-color: blue;
}
----------------------------------------------------
.overlay {
  opacity: 0.5;
}
--------------------
.main-banner {
  background-image: url('https://www.example.com/image.jpg');
}
-----------------------------
p {
  color: blue !important;
}

.main p {
  color: red;
}
-------------------------------
The 
Preview: Docs Loading link description
font-family
 property defines the typeface of an element.
Preview: Docs Sets the text size. Font size values can be in different units like absolute lengths and relative lengths.
font-size
 controls the size of text displayed.
Preview: Docs Loading link description
font-weight
 defines how thin or thick text is displayed.
The 
Preview: Docs Loading link description
text-align
 property places text in the left, right, or center of its parent container.
Text can have two different color attributes: 
Preview: Docs Loading link description
color
 and 
Preview: Docs Loading link description
background-color
. color defines the color of the text, while background-color defines the color behind the text.
CSS can make an element transparent with the 
Preview: Docs Loading link description
opacity
 property.
CSS can also set the background of an element to an image with the 
Preview: Docs Loading link description
background-image
 property.
The !important flag will override any style, however it should almost never be used, as it is extremely difficult to override.
-------------------------------------------------
p {
  height: 80px;
  width: 240px;
}
--------------------------------------------------
width—The thickness of the border. A border’s thickness can be set in pixels or with one of the following keywords: thin, medium, or thick.
style—The design of the border. Web browsers can render any of 10 different styles. Some of these styles include: none, dotted, and solid.
color—The color of the border. Web browsers can render 
Preview: Docs Loading link description
colors
 using a few different formats, including 140 built-in color keywords.

p {
  border: 3px solid coral;


}
p.content-header {
  height: 80px;
  width: 240px;
  border: solid coral;
}
--------------------------------------------
div.container {
  border: 3px solid blue;
  border-radius: 5px;
}
---------------------------
div.container {
  height: 60px;
  width: 60px;
  border: 3px solid blue;
  border-radius: 50%;
}

div.container {
  height: 60px;
  width: 60px;
  border: 3px solid blue;
  border-radius: 50%;
}
-------------------------------
p.content-header {
  border: 3px solid coral;
  padding: 10px;
}


Preview: Docs Defines the width of the top padding for an element.
padding-top
Preview: Docs Defines the width of the right padding for an element.
padding-right
Preview: Docs Defines the width of the bottom padding for an element.
padding-bottom
Preview: Docs Loading link description
padding-left

p.content-header {
  border: 3px solid fuchsia;
  padding-bottom: 10px;
}

--------------------------------------------
p.content-header {
  padding: 6px 11px 4px 9px;
}


p.content-header {
  padding: 5px 10px 20px;
}
------------------------------------
Preview: Docs Defines the top margin area for an element.
margin-top
Preview: Docs Defines the right margin area for an element.
margin-right
Preview: Docs Defines the bottom margin area for an element.
margin-bottom
Preview: Docs Defines the left margin area for an element.
margin-left

p {
  border: 3px solid DarkSlateGrey;
  margin-right: 15px;
}
--------------------------------------------
p {
  margin: 6px 10px 5px 12px;
}

p {
  margin: 20px 10px;
}
------------------------------
div.headline {
  width: 400px;
  margin: 0 auto;
}
--------------------------
Preview: Docs Defines the minimum width of an element.
min-width
—this property ensures a minimum 
Preview: Docs Loading link description
width
 of an element’s box.
Preview: Docs Defines the maximum width of an element.
max-width
—this property ensures a maximum width of an element’s box.
p {
  min-width: 300px;
  max-width: 600px;
}
Preview: Docs Defines the minimum height of an element.
min-height
 — this property ensures a minimum height for an element’s box.
Preview: Docs Defines the maximum height of an element.
max-height
 — this property ensures a maximum height of an element’s box.
p {
  min-height: 150px;
  max-height: 300px;
}


In the example above, the height of all paragraphs will not shrink below 150 pixels and the height will not exceed 300 pixels.

What will happen to the contents of an element’s box if the max-height property is set too low? It’s possible for the content to spill outside of the box, resulting in content that is not legible. You’ll learn how to work around this issue in the next exercise.

Instructions
Checkpoint 1 Enabled
1.
In style.css, set the minimum width of the p element to 200 pixels.

After you’ve done this successfully, resize the browser and notice how the paragraph’s box will no longer shrink below 200 pixels.

Checkpoint 2 Step instruction is unavailable until previous steps are completed
2.
Next, set the maximum width of the p element to 800 pixels.

After you’ve done this successfully, resize the browser and notice how the paragraph’s box will no longer expand beyond 800 pixels.

Checkpoint 3 Step instruction is unavailable until previous steps are completed
3.
In style.css, set the minimum height of the p element to 200 pixels.

After you’ve done this successfully, resize the browser and notice how the height of paragraph’s box will no longer shrink below 200 pixels.

Checkpoint 4 Step instruction is unavailable until previous steps are completed
4.
In style.css, set the maximum height of the p element to 300 pixels.

After you’ve done this successfully, resize the browser and notice how the height of paragraph’s box will no longer expand beyond 300 pixels. You should see your text overflowing. In the next exercise, we will fix that!

Concept Review
Want to quickly review some of the concepts you’ve been learning? Take a look at this material's cheatsheet!
Community Support
Still have questions? Get help from the Codecademy community.
Code Editor
Fullscreen Code Editor
1234567891011121314


body {
  background-color: white;
  font-family: 'Raleway', sans-serif;
}

.navigation ul {
  margin: 0;
  padding: 0;

ctrl + enter
Run


code - status: Syntax Issue
Web Browser
to previous page

browser page

http://localhost:8000/
Fullscreen Web Browser


12/16
Back (alt + , )
Back
Please complete all tasks to continue
Margin Collapse | The Box Model | Codecademy



------------------------------
The overflow property controls what happens to content that spills, or overflows, outside its box. The most commonly used values are:

hidden—when set to this value, any content that overflows will be hidden from view.
scroll—when set to this value, a scrollbar will be added to the element’s box so that the rest of the content can be viewed by scrolling.
visible—when set to this value, the overflow content will be displayed outside of the containing element. Note, this is the default

p {
  overflow: scroll; 
}
------------------------
* {
  margin: 0;
  padding: 0;
}
----------------------------
Elements can be hidden from view with the 
Preview: Docs The visibility property in CSS determines whether an element is visible or hidden within the page.
visibility
 property.

The visibility property can be set to one of the following values:

hidden — hides an element.
visible — displays an element.
collapse — collapses an element.

<ul>
  <li>Explore</li>
  <li>Connect</li>
  <li class="future">Donate</li>
</ul>

.future {
  visibility: hidden;
}
----------------------------------


* {
  box-sizing: border-box;
}

<h1>Hello World</h1>

* {
  box-sizing: border-box;
}

h1 {
  border: 1px dashed #4f768e;
  height: 150px;
  width: 200px;
  padding: 20px;
}
--------------------
body {
  background-color: #FFF;
  margin: 0px;
  padding: 50px 60px;
}

h1 {
  color: #004E89;
  font-family: 'Yantramanav', sans-serif;
  font-size: 50px;
  font-weight: 400;
  margin: 0;
  text-align: center;
}

h2 {
  color: #AAA;
  font-family: 'Yantramanav', sans-serif;
  font-size: 16px;
  font-weight: 100;
  letter-spacing: 2px;
  margin: 0;
  text-align: center;
  text-transform: uppercase;
}

p {
  color: #333;
  font-family: 'Yantramanav', sans-serif;
  font-size: 16px;
  font-weight: 100;
  margin: 0;
  text-align: center;
}

.actions {
  text-align: center;
  margin-top: 30px;
}

.actions a {
  background-color: #9DD1F1;
  border-radius: 3px;
  color: #004E89;
  font-family: 'Yantramanav', sans-serif;
  font-size: 16px;
  font-weight: 300;
  display: inline-block;
  margin: 10px;
  padding: 12px;
  text-align: center;
  text-decoration: none;
  text-transform: uppercase;
}

#gameboard {
  position: relative;
  text-align: center;
  top: 30px;
}

.card {
  
  border: 2px solid #9DD1F1;
  display: inline-block;
  height: 200px;
  margin-top: 4px;
  padding: 30px auto;
  text-align: center;
  width: 215px;
}

.card:hover {
  background-color: #004E89;
  border-color: #004E89;
}

.card img {
  padding-top: 40px;
}
-------------
* {
  box-sizing: border-box;
}
------------------------
In the default 
Preview: Docs Loading link description
box model
, box dimensions are affected by border thickness and padding.
The box-sizing property controls the box model used by the browser.
The default value of the box-sizing property is content-box.
The value for the new box model is border-box.
The border-box model is not affected by border thickness or padding.

https://www.youtube.com/watch?v=VuQ4pF_hfag

---------------------------------------
Preview: Docs Defines how elements are placed within the document.
position
Preview: Docs Loading link description
display
Preview: Docs Sets the stack order of an element.
z-index
Preview: Docs Loading link description
float
Preview: Docs Loading link description
clear
--------------------------------------
Preview: Docs Positions an element according to the normal flow of the page but not in any special way.
static
 - the default value (it does not need to be specified)
Preview: Docs Positions an element relative to its normal document flow placement, allowing for improved styling control.
relative
Preview: Docs Places an element relative to its nearest positioned ancestor or the browser window.
absolute
Preview: Docs Positions an element relative to the viewport, removing it from the document flow and keeping it fixed during page scrolling.
fixed
Preview: Docs Defines an element that toggles between relative and fixed positions depending on the scroll position.
sticky
-------------------------------------------------
.green-box {
  background-color: green;
  position: relative;
}
----------------------------------------
Preview: Docs Specifies the distance of an element from the top of the specified position.
top
 - moves the element down from the top.
Preview: Docs Specifies the distance of an element from the bottom of the specified position.
bottom
 - moves the element up from the bottom.
Preview: Docs Loading link description
left
 - moves the element away from the left side (to the right).
Preview: Docs Loading link description
right
 - moves the element away from the right side (to the left).
------------------------------------------
.green-box {
  background-color: green;
  position: relative;
  top: 50px;
  left: 120px;
}
---------------------
.title {
  position: fixed;
  top: 0px;
  left: 0px;
}
-----------------------------
.box-bottom {
  background-color: darkgreen;
  position: sticky;
  top: 240px;
}
-----------------------------
.blue-box {
  background-color: blue;
  position: relative;
  z-index: 1;
}

.green-box {
  background-color: green;
  position: relative;
  top: -170px;
  left: 170px;
}
------------------------

h1 {
  display: inline;
}
------------------------
To learn more about <em>inline</em> elements, read <a href="#">MDN documentation</a>.   
----------------
strong {
  display: block;
}
-------------------------
<div class="rectangle">
  <p>I’m a rectangle!</p>
</div>
<div class="rectangle">
  <p>So am I!</p>
</div>
<div class="rectangle">
  <p>Me three!</p>
</div>

.rectangle {
  display: inline-block;
  width: 200px;
  height: 300px;
}
---------------------------------------
.green-section {
  width: 50%;
  height: 150px;
}

.orange-section {
  background-color: orange;
  width: 50%;
  float: right;
}
---------------------------
The clear property 
left—the left side of the element will not touch any other element within the same containing element.
right—the right side of the element will not touch any other element within the same containing element.
both—neither side of the element will touch any other element within the same containing element.
none—the element can touch either side.
div {
  width: 200px;
  float: left;
}

div.special {
  clear: left;
}
-----------------------------
Named colors — English words that describe colors, also called keyword colors
RGB — numeric values that describe a mix of red, green, and blue
HSL — numeric values that describe a mix of hue, saturation, and lightness

Preview: Docs To set color property values for an element.
color
 - this property styles an element’s foreground color.
Preview: Docs Defines a color for the background of an element.
background-color
 - this property styles an element’s background color.

h1 {
  color: red;
  background-color: blue;
}
-----------------------------------
darkseagreen: #8FBC8F
sienna:       #A0522D
saddlebrown:  #8B4513
brown:        #A52A2A
black:        #000000 or #000
white:        #FFFFFF or #FFF
aqua:         #00FFFF or #0FF
-----------------------------------------
h1 {
  color: rgb(23, 45, 23);
}
---------------------------------------
color: hsl(120, 60%, 70%);
------------------------------
color: hsla(34, 100%, 50%, 0.1);

-----------------------------------
color: transparent;


---------------------------------
h1 {
  font-family: Arial;
}


h1 {
  font-family: Caslon, Georgia, 'Times New Roman';
}
---------------------------------------
.classA {
   width: 150px;
   height: 150px;
   overflow: scroll;
}

.classB {
   padding: 10px;
}

.classC {
   margin: 10px;
}

.classD {
   width: 150px;
   height: 150px;
   background-color: lightblue;
}
Answer Choices

<div class="classA">
    The greenhouse effect is the process by which radiation from a planet's 
    atmosphere warms the planet's surface to a temperature above what it would 
    be without its atmosphere.
</div>


<div class="classB">
    The greenhouse effect is the process by which radiation from a planet's 
    atmosphere warms the planet's surface to a temperature above what it would 
    be without its atmosphere.
</div>


<p class="classC">
    The greenhouse effect is the process by which radiation from a planet's 
    atmosphere warms the planet's surface to a temperature above what it would 
    be without its atmosphere.
</p>


<div class="classD">
    The greenhouse effect is the process by which radiation from a planet's 
    atmosphere warms the planet's surface to a temperature above what it would 
    be without its atmosphere.
</div>
-----------------------------------------------
h1 {
  font-family: Arial;
}


h1 {
  font-family: 'Times New Roman';
}

h1 {
  font-family: Caslon, Georgia, 'Times New Roman';
}
-------------------------------
The font-weight property can take any one of these keyword values:

bold: Bold font weight.
normal: Normal font weight. This is the default value.
lighter: One font weight lighter than the element’s parent value.
bolder: One font weight bolder than the element’s parent value

.left-section {
  font-weight: 700;
}

.right-section {
  font-weight: bold; 
}
-----------------------
h3 {
  font-style: italic;
}
--------------------
h1 {
  text-transform: uppercase;
}
---------------------------
p {
  letter-spacing: 2px;
}
h1 {
  word-spacing: 0.3em;
}
h1 {
  text-align: right;
}
--------------------------------
<head>
  <!-- Add the link element for Google Fonts along with other metadata -->
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@100&display=swap" rel="stylesheet">
</head>
p {
  font-family: 'Roboto', sans-serif;
}
-----------------------
OTF (OpenType Font)
TTF (TrueType Font)
WOFF (Web Open Font Format)
WOFF2 (Web Open Font Format 2)

@font-face {
  font-family: 'MyParagraphFont';
  src: url('fonts/Roboto.woff2') format('woff2'),
       url('fonts/Roboto.woff') format('woff'),
       url('fonts/Roboto.ttf') format('truetype');
}
The @font-face at-rule is used as the selector. It’s recommended to define the @font-face ruleset at the top of your CSS stylesheet.
Inside the declaration block, the font-family property is used to set a custom name for the downloaded font. The name can be anything you choose, but it must be surrounded by quotation marks. In the example, the font is named 'MyParagraphFont', as this font will be used for all paragraphs.
The src property contains three values, each specifying the relative path to the font file and its format. In this example, the font files are stored inside a folder named fonts within the working directory.
Note that the ordering for the different formats is important because our browser will start from the top of the list and search until it finds a font format that it supports. Read more on format prioritization on CSS-Tricks.

p {
  font-family: 'MyParagraphFont', sans-serif;
}


















